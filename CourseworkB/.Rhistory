modelTeDbm <- lm(score ~ TeD, data=bmd)
modelTeDTypebm <- lm(score ~ TeD + Type, data=bmd)
anova(modelBig)
summary(modelBig)
anova(modelTeD)
summary(modelTeD)
anova(modelTeDbm,modelTeDTypebm)
summary(modelTeDType)
## RQ1
d$Type<-substr(d$model,1,1) #add one extra column to aggregate all B, and all M.
#each baseline
subsetB1 <-d[which(d$model == 'B1'),]
subsetB2 <-d[which(d$model == 'B2'),]
subsetB3 <-d[which(d$model == 'B3'),]
#each M model
subsetMN <-d[which(d$model == 'MN'),]
subsetM1 <-d[which(d$model == 'M1'),]
subsetM2 <-d[which(d$model == 'M2'),]
subsetM3 <-d[which(d$model == 'M3'),]
subsetMF <-d[which(d$model == 'MF'),]
subsetB<-d[which(d$model == 'B1'|d$model == 'B2'|d$model == 'B3'),]
subsetM<-d[which(d$model == 'MN'|d$model == 'M1'|d$model == 'M2'|d$model == 'M3'|d$model == 'MF'),]
subsetBM <-d[which(d$model != 'S'),]
subsetS <-d[which(d$model == 'S'),]
AggregateByModel<-aggregate(list(d$score), by =list(d$TeD, d$Model) , mean)
AggregateByType<-aggregate(list(d$score), by =list(d$TeD, d$Type) , mean)
B<-AggregateByType[(1:7), 3]
M<-AggregateByType[(8:14), 3]
# take a closer look at the data.
hist(subsetB$score)
hist(subsetM$score)
#calculate all means
meanB1 <-mean(subsetB1$score)
meanB2 <-mean(subsetB2$score)
meanB3 <-mean(subsetB3$score)
meanMN <-mean(subsetMN$score)
meanM1 <-mean(subsetM1$score)
meanM2 <-mean(subsetM2$score)
meanM3 <-mean(subsetM3$score)
meanMF <-mean(subsetMF$score)
meanB <-mean(B)
meanM <-mean(M)
meanAll <-mean(d$score)
#calculate all standard deviation
stdB1 <-sd(subsetB1$score)
stdB2 <-sd(subsetB2$score)
stdB3 <-sd(subsetB3$score)
stdMN <-sd(subsetMN$score)
stdM1 <-sd(subsetM1$score)
stdM2 <-sd(subsetM2$score)
stdM3 <-sd(subsetM3$score)
stdMF <-sd(subsetMF$score)
stdB <-sd(B)
stdM <-sd(M)
stdAll <-sd(d$score)
#simple t-test on the means
t.test(subsetB$score,subsetM$score)
subsetBmean<-mean(subsetB$score)
subsetMmean<-mean(subsetM$score)
#paired t-test on the means for each testing dataset.
t.test(B, M, paired = TRUE, alternative = "two.sided")
# Plot paired data
library(PairedData)
pd <- paired(B, M)
plot(pd, type = "profile") + theme_bw()
#tes tdistribution of the differences.
difference <- (M-B)
shapiro.test(difference)
## RQ2
data <- read.csv("data.csv")
dbase = subset(data,data$model=='MN' | data$model=='M1' | data$model=='M2' | data$model=='M3' | data$model=='MF' | data$model=='S')
d1 = subset(dbase,dbase$TeD=='TeD1')
d2 = subset(dbase,dbase$TeD=='TeD2')
d3 = subset(dbase,dbase$TeD=='TeD3')
d4 = subset(dbase,dbase$TeD=='TeD4')
d5 = subset(dbase,dbase$TeD=='TeD5')
d6 = subset(dbase,dbase$TeD=='TeD6')
d7 = subset(dbase,dbase$TeD=='TeD7')
install.packages("dplyr")
library(dplyr)
group_by(d, model) %>%
summarise(
count = n(),
mean = mean(score, na.rm = TRUE),
sd = sd(score, na.rm = TRUE)
)
dn <- subset(d,d$model=='MN')
d1 <- subset(d,d$model=='M1')
d2 <- subset(d,d$model=='M2')
d3 <- subset(d,d$model=='M3')
df <- subset(d,d$model=='MF')
par(mfrow=c(7,1))
boxplot(d1$score ~ d1$model,main="TeD1")
boxplot(d2$score ~ d2$model,main="TeD2")
boxplot(d3$score ~ d3$model,main="TeD3")
boxplot(d4$score ~ d4$model,main="TeD4")
boxplot(d5$score ~ d5$model,main="TeD5")
boxplot(d6$score ~ d6$model,main="TeD6")
boxplot(d7$score ~ d7$model,main="TeD7")
res = aov(d$score ~ d$model)
summary(res)
TukeyHSD(res)
## RQ3
d = subset(data, data$model=='S')
d$TrD <- ifelse(d$TrD1==1,1,ifelse(d$TrD2==1,2,ifelse(d$TrD3==1,3,ifelse(d$TrD4==1,4,ifelse(d$TrD5==1,5,ifelse(d$TrD6==1,6,ifelse(d$TrD7==1,7,ifelse(d$TrD8==1,8,0))))))))
d1 = subset(d,d$TeD=='TeD1')
d2 = subset(d,d$TeD=='TeD2')
d3 = subset(d,d$TeD=='TeD3')
d4 = subset(d,d$TeD=='TeD4')
d5 = subset(d,d$TeD=='TeD5')
d6 = subset(d,d$TeD=='TeD6')
d7 = subset(d,d$TeD=='TeD7')
library(dplyr)
group_by(d, TrD) %>%
summarise(
count = n(),
mean = mean(score, na.rm = TRUE),
sd = sd(score, na.rm = TRUE)
)
boxplot(d$score ~ factor(d1$TrD))
par(mfrow=c(4,2))
boxplot(d1$score ~ factor(d1$TrD),main="TeD1")
boxplot(d2$score ~ factor(d2$TrD),main="TeD2")
boxplot(d3$score ~ factor(d3$TrD),main="TeD3")
boxplot(d4$score ~ factor(d4$TrD),main="TeD4")
boxplot(d5$score ~ factor(d5$TrD),main="TeD5")
boxplot(d6$score ~ factor(d6$TrD),main="TeD6")
boxplot(d7$score ~ factor(d7$TrD),main="TeD7")
res = aov(d1$score ~ factor(d1$TrD))
summary(res)
TukeyHSD(res)
install.packages("dplyr")
install.packages("dplyr")
View(B())
View(B
View(B)
B
View(AggregateByType)
View(AggregateByType)
View(d)
View(d)
View(AggregateByType)
View(AggregateByType)
View(AggregateByType)
View(analysis_Beyonce)
AggregateByModel<-aggregate(list(d$score), by =list(d$TeD, d$Model) , mean)
View(d)
View(d)
d <- read.csv("data.csv")
d$Type <- factor(d$Type)
str(d)
## RQ1
d$Type<-substr(d$model,1,1) #add one extra column to aggregate all B, and all M.
subsetB<-d[which(d$model == 'B1'|d$model == 'B2'|d$model == 'B3'),]
subsetM<-d[which(d$model == 'MN'|d$model == 'M1'|d$model == 'M2'|d$model == 'M3'|d$model == 'MF'),]
subsetBM <-d[which(d$model != 'S'),]
subsetS <-d[which(d$model == 'S'),]
AggregateByModel<-aggregate(list(d$score), by =list(d$TeD, d$Model) , mean)
AggregateByType<-aggregate(list(d$score), by =list(d$TeD, d$Type) , mean)
View(d)
AggregateByModel<-aggregate(list(d$score), by =list(d$TeD, d$model) , mean)
View(AggregateByModel)
View(AggregateByModel)
AggregateTrD1<-aggregate(list(d$score), by =list(d$TrD1) , mean)
View(AggregateTrD1)
View(AggregateTrD1)
AggregateTrD2<-aggregate(list(d$score), by =list(d$TrD2) , mean)
AggregateTrD3<-aggregate(list(d$score), by =list(d$TrD3) , mean)
AggregateTrD4<-aggregate(list(d$score), by =list(d$TrD4) , mean)
AggregateTrD5<-aggregate(list(d$score), by =list(d$TrD5) , mean)
AggregateTrD6<-aggregate(list(d$score), by =list(d$TrD6) , mean)
AggregateTrD7<-aggregate(list(d$score), by =list(d$TrD7) , mean)
AggregateTrD8<-aggregate(list(d$score), by =list(d$TrD8) , mean)
View(AggregateTrD2)
View(AggregateTrD2)
View(AggregateTrD2)
View(AggregateTrD2)
View(AggregateTrD3)
View(AggregateTrD3)
View(AggregateTrD4)
View(AggregateTrD4)
View(AggregateTrD5)
View(AggregateTrD5)
TrD1<-AggregateByTrD1[2,3]
TrD2<-AggregateByTrD2[2,3]
TrD3<-AggregateByTrD3[2,3]
TrD4<-AggregateByTrD4[2,3]
TrD1<-AggregateTrD1[2,3]
TrD2<-AggregateTrD2[2,3]
TrD3<-AggregateTrD3[2,3]
TrD4<-AggregateTrD4[2,3]
TrD5<-AggregateTrD5[2,3]
TrD6<-AggregateTrD6[2,3]
TrD7<-AggregateTrD7[2,3]
TrD8<-AggregateTrD8[2,3]
TrD1<-AggregateTrD1[2,3]
TrD1
View(AggregateTrD1)
View(AggregateTrD1)
TrD1<-AggregateTrD1[2,2]
TrD1
TrD1<-AggregateTrD1[2,2]
TrD2<-AggregateTrD2[2,2]
TrD3<-AggregateTrD3[2,2]
TrD4<-AggregateTrD4[2,2]
TrD5<-AggregateTrD5[2,2]
TrD6<-AggregateTrD6[2,2]
TrD7<-AggregateTrD7[2,2]
TrD8<-AggregateTrD8[2,2]
AggregateTrD1All<-aggregate(list(d$score), by =list(d$TrD1) , mean,d$TeD)
AggregateTrD1All
AggregateTrD1All
AggregateTr<-aggregate(list(d$score), by =list(d$TrD1TeD, d$Type) , mean)
AggregateTr<-aggregate(list(d$score), by =list(d$TrD1TeD, d$Type) , mean)
AggregateTr<-aggregate(list(d$score), by =list(d$TrD1, d$Type) , mean)
View(AggregateTr)
View(AggregateTr)
AggregateTrD2All<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD) , mean)
AggregateTrD2All<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD) , mean)
AggregateTrD3All<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD) , mean)
AggregateTrD4All<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD) , mean)
AggregateTrD5All<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD) , mean)
AggregateTrD6All<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD) , mean)
AggregateTrD7All<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD) , mean)
AggregateTrD8All<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD) , mean)
View(AggregateTrD2)
View(AggregateTrD1)
View(AggregateTrD1)
View(AggregateTrD2)
View(AggregateTrD2)
View(AggregateTrD3All)
View(AggregateTrD3All)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD) , mean)
AggregateTrD3PertrainAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD) , mean)
AggregateTrD4PertrainAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD) , mean)
AggregateTrD5PertrainAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD) , mean)
AggregateTrD6PertrainAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD) , mean)
AggregateTrD7PertrainAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD) , mean)
AggregateTrD8PertrainAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD) , mean)
View(AggregateByModel)
View(AggregateTrD2PertrainAndType)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD,d%model) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD,d%model) , mean)
AggregateTrD3PertrainAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD,d%model) , mean)
AggregateTrD4PertrainAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD,d%model) , mean)
AggregateTrD5PertrainAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD,d%model) , mean)
AggregateTrD6PertrainAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD,d%model) , mean)
AggregateTrD7PertrainAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD,d%model) , mean)
AggregateTrD8PertrainAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD,d%model) , mean)
aggregate(list(d$score), by =list(d$TrD1) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD,d%model) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD,d$model) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD,d$model) , mean)
AggregateTrD3PertrainAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD,d$model) , mean)
AggregateTrD4PertrainAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD,d$model) , mean)
AggregateTrD5PertrainAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD,d$model) , mean)
AggregateTrD6PertrainAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD,d$model) , mean)
AggregateTrD7PertrainAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD,d$model) , mean)
AggregateTrD8PertrainAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD,d$model) , mean)
View(AggregateTrD6PertrainAndType)
View(AggregateTrD6PertrainAndType)
AggregateTrD1PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1==1, d$Type,d$TeD,d$model) , mean)
View(AggregateTrD1PertrainAndType)
View(AggregateTrD1PertrainAndType)
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$TrD1==1)]
View(subset)
View(subset)
View(sem)
View(AggregateTrD1PertrainAndType)
View(AggregateTrD1PertrainAndType)
AggregateTrD1PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD,d$model) , mean)
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$TrD1==1)]
View(subset)
View(subset)
AggregateTrD1PertrainAndType$Group.1
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$Group.1==1)]
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$"Group.1"==1)]
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$'Group.1'==1)]
AggregateTrD1PertrainAndType$Group.1
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$Group.1 ==1)]
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$Group.1==1)]
subset <-AggregateTrD1PertrainAndType[which(AggregateTrD1PertrainAndType$"Group.1"==1)]
subset <-AggregateTrD1PertrainAndType[which("AggregateTrD1PertrainAndType$Group.1"==1)]
View(subset)
View(subset)
AggregateTrD1PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type) , mean)
AggregateTrD3PertrainAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type) , mean)
AggregateTrD4PertrainAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type) , mean)
AggregateTrD5PertrainAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type) , mean)
AggregateTrD6PertrainAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type) , mean)
AggregateTrD7PertrainAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type) , mean)
AggregateTrD8PertrainAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type) , mean)
View(AggregateTrD4PertrainAndType)
View(AggregateTrD4PertrainAndType)
View(AggregateTrD5All)
View(AggregateTrD5PertrainAndType)
View(AggregateTrD6PertrainAndType)
View(AggregateTrD7PertrainAndType)
TrD1<-AggregateTrD1PertrainAndType[2,3]
View(AggregateTrD6)
View(AggregateTrD1)
View(AggregateTrD1PertrainAndType)
TrD1<-AggregateTrD1PertrainAndType[3,3]
TrD1<-AggregateTrD1PertrainAndType[5,3]
AggregateTrD1PertrainAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type) , mean)
AggregateTrD2PertrainAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type) , mean)
AggregateTrD3PertrainAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type) , mean)
AggregateTrD4PertrainAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type) , mean)
AggregateTrD5PertrainAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type) , mean)
AggregateTrD6PertrainAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type) , mean)
AggregateTrD7PertrainAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type) , mean)
AggregateTrD8PertrainAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type) , mean)
TrD1M<-AggregateTrD1PertrainAndType[3,3]
TrD2M<-AggregateTrD2PertrainAndType[3,3]
TrD3M<-AggregateTrD3PertrainAndType[3,3]
TrD4M<-AggregateTrD4PertrainAndType[3,3]
TrD5M<-AggregateTrD5PertrainAndType[3,3]
TrD6M<-AggregateTrD6PertrainAndType[3,3]
TrD7M<-AggregateTrD7PertrainAndType[3,3]
TrD8M<-AggregateTrD8PertrainAndType[3,3]
TrD1S<-AggregateTrD1PertrainAndType[5,3]
TrD2S<-AggregateTrD2PertrainAndType[5,3]
TrD3S<-AggregateTrD3PertrainAndType[5,3]
TrD4S<-AggregateTrD4PertrainAndType[5,3]
TrD5S<-AggregateTrD5PertrainAndType[5,3]
TrD6S<-AggregateTrD6PertrainAndType[5,3]
TrD7S<-AggregateTrD7PertrainAndType[5,3]
TrD8S<-AggregateTrD8PertrainAndType[5,3]
AggregateTrD1PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD) , mean)
AggregateTrD2PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD) , mean)
AggregateTrD3PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD) , mean)
AggregateTrD4PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD) , mean)
AggregateTrD5PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD) , mean)
AggregateTrD6PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD) , mean)
AggregateTrD7PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD) , mean)
AggregateTrD8PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD) , mean)
View(AggregateTrD7)
View(AggregateTrD7)
View(AggregateTrD6PertrainTestAndType)
subset <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1),]
View(subset)
View(subset)
subset <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1|AggregateTrD1PertrainTestAndType$Group.2 == M),]
View(subset)
View(subset)
subset <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1|AggregateTrD1PertrainTestAndType$Group.2 == M),]
View(subset)
View(subset)
subset <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1|AggregateTrD1PertrainTestAndType$Group.2 == 'M'),]
View(subset)
View(subset)
subset <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1&AggregateTrD1PertrainTestAndType$Group.2 == 'M'),]
View(subset)
View(subset)
AggregateTrD1PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD1, d$Type,d$TeD) , mean)
AggregateTrD2PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD2, d$Type,d$TeD) , mean)
AggregateTrD3PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD3, d$Type,d$TeD) , mean)
AggregateTrD4PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD4, d$Type,d$TeD) , mean)
AggregateTrD5PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD5, d$Type,d$TeD) , mean)
AggregateTrD6PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD6, d$Type,d$TeD) , mean)
AggregateTrD7PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD7, d$Type,d$TeD) , mean)
AggregateTrD8PertrainTestAndType<-aggregate(list(d$score), by =list(d$TrD8, d$Type,d$TeD) , mean)
subsetTr1 <- AggregateTrD1PertrainTestAndType[which(AggregateTrD1PertrainTestAndType$Group.1 == 1&AggregateTrD1PertrainTestAndType$Group.2 == 'M'),]
subsetTr2 <- AggregateTrD2PertrainTestAndType[which(AggregateTrD2PertrainTestAndType$Group.1 == 1&AggregateTrD2PertrainTestAndType$Group.2 == 'M'),]
subsetTr3 <- AggregateTrD3PertrainTestAndType[which(AggregateTrD3PertrainTestAndType$Group.1 == 1&AggregateTrD3PertrainTestAndType$Group.2 == 'M'),]
subsetTr4 <- AggregateTrD4PertrainTestAndType[which(AggregateTrD4PertrainTestAndType$Group.1 == 1&AggregateTrD4PertrainTestAndType$Group.2 == 'M'),]
subsetTr5 <- AggregateTrD5PertrainTestAndType[which(AggregateTrD5PertrainTestAndType$Group.1 == 1&AggregateTrD5PertrainTestAndType$Group.2 == 'M'),]
subsetTr6 <- AggregateTrD6PertrainTestAndType[which(AggregateTrD6PertrainTestAndType$Group.1 == 1&AggregateTrD6PertrainTestAndType$Group.2 == 'M'),]
subsetTr7 <- AggregateTrD7PertrainTestAndType[which(AggregateTrD7PertrainTestAndType$Group.1 == 1&AggregateTrD7PertrainTestAndType$Group.2 == 'M'),]
subsetTr8 <- AggregateTrD8PertrainTestAndType[which(AggregateTrD8PertrainTestAndType$Group.1 == 1&AggregateTrD8PertrainTestAndType$Group.2 == 'M'),]
View(subsetTr1)
View(subsetTr1)
View(subsetTr2)
View(subsetTr2)
View(subsetTr3)
View(subsetTr3)
View(subsetTr4)
View(subsetTr4)
View(subsetTr5)
View(subsetTr5)
View(subsetTr6)
View(subsetTr6)
View(subsetTr7)
View(subsetTr8)
# Plot paired data
library(PairedData)
pd <- paired(subsetTr1, subsetTr2,subsetTr3)
plot(pd, type = "profile") + theme_bw()
# Plot paired data
library(PairedData)
pd <- paired(subsetTr1, subsetTr2)
plot(pd, type = "profile") + theme_bw()
# Plot paired data
library(PairedData)
pd <- paired(subsetTr3, subsetTr5)
plot(pd, type = "profile") + theme_bw()
# Plot paired data
library(PairedData)
pd <- paired(subsetTr3, subsetTr5)
plot(pd, type = "profile") + theme_bw()
# Plot paired data
library(PairedData)
pd <- paired(subsetTr3,subsetTr5)
plot(pd, type = "profile") + theme_bw()
View(subsetTr3)
View(subsetTr3)
subs <-subsetTr1[(1:7), 4]
# Plot paired data
library(PairedData)
pd <- paired(subTr1,subTr2,subTr3)
plot(pd, type = "profile") + theme_bw()
# Plot paired data
library(PairedData)
pd <- paired(subTr1,subTr2)
plot(pd, type = "profile") + theme_bw()
subTr1<-subsetTr1[(1:7), 4]
subTr2<-subsetTr2[(1:7), 4]
subTr3<-subsetTr3[(1:7), 4]
subTr4<-subsetTr4[(1:7), 4]
subTr5<-subsetTr5[(1:7), 4]
subTr6<-subsetTr6[(1:7), 4]
subTr7<-subsetTr7[(1:7), 4]
subTr8<-subsetTr8[(1:7), 4]
# Plot paired data
library(PairedData)
pd <- paired(subTr1,subTr2)
plot(pd, type = "profile") + theme_bw()
plot(subTr1,type = "o")
plot([subTr1,subTr2],type = "o")
plot(subTr1,type = "o",col = "red")
lines(subTr2, type = "o", col = "blue")
plot(subTr1,type = "o",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "blue")
lines(subTr4, type = "o", col = "blue")
lines(subTr5, type = "o", col = "blue")
lines(subTr6, type = "o", col = "blue")
lines(subTr7, type = "o", col = "blue")
lines(subTr8, type = "o", col = "blue")
plot(subTr1,type = "o",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
plot(subTr1,type = "profile",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
plot(subTr1,type = "profile",col = "red")
dev.new(width=5, height=4)
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
dev.new(width=5, height=4)
plot(subTr1,type = "profile",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
dev.new(width=5, height=5)
plot(subTr1,type = "profile",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
dev.new(width=6, height=6)
plot(subTr1,type = "profile",col = "red")
lines(subTr2, type = "o", col = "blue")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
dev.new(width=6, height=6)
plot(subTr1,type = "profile",col = "red")
lines(subTr2, type = "o", col = "magenta")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
View(d)
dev.new(width=6, height=6)
plot(subTr1,type = "profile",col = "red", xlab = "Testing set", ylab = "Mean score")
lines(subTr2, type = "o", col = "magenta")
lines(subTr3, type = "o", col = "green")
lines(subTr4, type = "o", col = "yellow")
lines(subTr5, type = "o", col = "orange")
lines(subTr6, type = "o", col = "pink")
lines(subTr7, type = "o", col = "purple")
lines(subTr8, type = "o", col = "black")
